# Sample config for Prometheus.

global:
  scrape_interval:     15s # By default, scrape targets every 15 seconds.
  evaluation_interval: 15s # By default, scrape targets every 15 seconds.
  # scrape_timeout is set to the global default (10s).

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
      monitor: 'example'

# Load and evaluate rules in this file every 'evaluation_interval' seconds.
rule_files:
  # - "first.rules"
  # - "second.rules"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s
    scrape_timeout: 5s

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ['localhost:9090']

  - job_name: node
    # If prometheus-node-exporter is installed, grab stats about the local
    # machine by default.
    static_configs:
      - targets: ['localhost:9100']

{% for node in groups['hypervisors'] %}
  - job_name: pve-{{ node }}
    static_configs:
      - targets: ['{{ hostvars[node].hostname }}:9221']
    metrics_path: /pve
    params:
      module: [default]
    basic_auth:
      username: prometheus
      password: {{ prometheus_exporter_auth }}
    scheme: https

{% endfor %}
{% for node in groups['containers'] %}
  - job_name: ct-{{ node }}
    static_configs:
      - targets: ['{{ reverse_proxy_hostname }}']
    metrics_path: /{{ node }}
    params:
      module: [default]
    basic_auth:
      username: prometheus
      password: {{ prometheus_exporter_auth }}
    scheme: https

{% endfor %}
{% for node in groups['backup'] %}
  - job_name: backup-{{ node }}
    static_configs:
      - targets: ['{{ node }}']
    metrics_path: /metrics
    params:
      module: [default]
    basic_auth:
      username: prometheus
      password: {{ prometheus_exporter_auth }}
    scheme: https

{% endfor %}
