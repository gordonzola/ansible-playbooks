---
- name: Disable Proxmox Enterprise sources
  file:
    path: /etc/apt/sources.list.d/pve-enterprise.list
    state: absent

- name: update system
  apt:
    upgrade: dist
    update_cache: yes

- name: Disable rpcbind
  systemd:
    name: rpcbind
    state: stopped
    enabled: no

- name: Setup U2F
  lineinfile:
    path: /etc/pve/datacenter.cfg
    line: "u2f: appid=https://{{ hostname }}:8006"

- name: Ensure that password authentication is disabled
  replace:
    path: /etc/ssh/sshd_config
    regexp: "^#(PasswordAuthentication) yes$"
    replace: "\\1 no"

- name: Setup EFI
  include: tasks/efi.yml

- name: Update the appliance list
  command: "pveam update"

- name: Download container templates
  command:
    cmd: "pveam download local {{ item }}"
    creates: "/var/lib/vz/template/cache/{{ item }}"
  loop:
    - ubuntu-18.04-standard_18.04.1-1_amd64.tar.gz
    - alpine-3.10-default_20190626_amd64.tar.xz

- name: Create bridge interface
  blockinfile:
    path: /etc/network/interfaces
    block: "{{ lookup('file', './files/interfaces') }}"
  register: bridge_task

# - name: Prepare networking for included files
#   file:
#     path: /etc/network/ports.d/post-up
#     state: directory

# - name: Prepare networking for included files
#   file:
#     path: /etc/network/ports.d/post-down
#     state: directory

- name: Activate bridge
  shell: "ifdown vmbr1; sleep 1; ifup vmbr1"
  when: bridge_task.changed

- name: Set up firewall
  template:
    src: templates/cluster.fw
    dest: /etc/pve/firewall/cluster.fw

# - name: Create directory for container links
#   file:
#     path: "/var/containers"
#     state: directory

- name: Create PVE mountpoint
  file:
    path: /mnt/pve
    state: directory

- name: Create PVE mountpoint for SSL
  file:
    path: /mnt/pve/nfs-ssl
    state: directory

# - name: Create PVE mountpoint for SSL
#   file:
#     path: /mnt/pve/nfs-{{ hostvars[item].ctid }}
#     state: directory
#   loop: "{{ groups['containers'] }}"

# - name: Create NFS storages
#   blockinfile:
#     path: /etc/pve/storage.cfg
#     block: "{{ lookup('template', './templates/storage.cfg') }}"

# - name: Create NFS SSL storage
#   command: "pvesm add nfs nfs-ssl --export /home/user-data/ssl --path /mnt/pve/nfs-ssl --server {{ miab_ip }} --content snippets"
#   ignore_errors: yes

# - name: Create NFS storages
#   command: "pvesm add nfs nfs-{{ hostvars[item].ctid }} --export /srv/public --path /mnt/pve/nfs-{{ hostvars[item].ctid }} --server 10.0.{{ hostvars[item].vlan }}.{{ hostvars[item].ctid }} --content snippets"
#   ignore_errors: yes
#   loop: "{{ groups['containers'] }}"
#   when: "hostvars[item].role not in ('http', 'miab', 'firewall')"

# - name: Call pvesm status to enable storages
#   command: pvesm status
...
