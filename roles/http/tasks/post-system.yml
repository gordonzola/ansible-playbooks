---
# - name: Create sites docroots
#   file:
#     path: "/var/www/vhosts/{{ item }}/docroot"
#     state: directory
#   loop: "{{ groups['containers'] }}"

- name: Create sites config
  template:
    src: templates/vhost_{{ hostvars[item].role }}.j2
    dest: "/etc/nginx/conf.d/10.{{ item }}.conf"
  loop: "{{ groups['containers'] }}"
  when: "item != inventory_hostname and hostvars[item].role != 'firewall'"

- name: Create monitoring config
  template:
    src: templates/vhost_monitoring.j2
    dest: "/etc/nginx/conf.d/10.{{ inventory_hostname }}.conf"

- name: Install python3-passlib
  pip:
    name: passlib

- name: Set basic auth file
  htpasswd:
    path: /etc/nginx/node_exporter.htpasswd
    name: prometheus
    owner: nginx
    group: nginx
    password: "{{ prometheus_exporter_auth }}"

# - name: Create docroot dirs
#   file:
#     path: "/var/www/{{ item }}/docroot"
#     state: directory
#   loop: "{{ groups['containers'] }}"
#   when: "item != inventory_hostname"

# - name: Enable nfsmount
#   service:
#     name: nfsmount
#     state: started
#     enabled: no

- name: Copy private key
  command: "bash /root/copy-certs.sh"
  # copy:
  #   src: /home/user-data/ssl/ssl_private_key.pem
  #   dest: /etc/ssl/letsencrypt/ssl_private_key.pem
  #   remote_src: yes

# - name: Copy certs
  # copy:
  #   src: /home/user-data/ssl/ssl_certificate.pem
  #   dest: /etc/ssl/letsencrypt/ssl_certificate.pem
  #   remote_src: yes

# - name: Reload nginx
  # service:
  #   name: nginx
  #   state: reloaded
...
