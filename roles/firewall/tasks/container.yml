---
- name: Setup container
  include_role:
    name: container
    tasks_from: container

- name: Install iptables in container
  command: "pct exec {{ ctid }} /sbin/apk add iptables"

- name: Install vlan in container
  command: "pct exec {{ ctid }} /sbin/apk add vlan"

- name: Create vlan interfaces
  blockinfile:
    path: "/{{ zfs_volume }}/subvol-{{ ctid }}-disk-0/etc/network/interfaces"
    block: |
      {% for host in groups['containers'] %}
      {% if hostvars[host].vlan != '0' %}
      auto eth1.{{ hostvars[host].vlan }}
      iface eth1.{{ hostvars[host].vlan }} inet static
          address 10.0.{{ hostvars[host].vlan }}.1
          netmask 255.255.255.0

      {% endif %}
      {% endfor %}
  register: bridge_task

- name: Restart container networking to enable vlans
  command: "pct exec {{ ctid }} /etc/init.d/networking restart"
  when: bridge_task.changed

- name: Fetch role vars (for firewall ports)
  include_vars:
    file: "{{ playbook_dir }}/roles/{{ role_name }}/defaults/main.yml"
    name: "{{ role_name }}"
  loop:
    - http
    - miab
    - osp
  loop_control:
    loop_var: role_name

- name: Set roles vars fact
  set_fact:
    roles_vars:
      http: "{{ http }}"
      miab: "{{ miab }}"
      osp: "{{ osp }}"

# - name: Add sysctl conf
#   copy:
#     src: files/sysctl.conf
#     dest: "/{{ zfs_volume }}/subvol-{{ ctid }}-disk-0/etc/sysctl.d/01-firewall.conf"
#     remote_src: no

- name: Add iptables rules
  template:
    src: templates/firewall_rules.j2
    dest: "/{{ zfs_volume }}/subvol-{{ ctid }}-disk-0/etc/iptables/rules-save"

- name: Enable iptables service
  command: "pct exec {{ ctid }} rc-update add iptables"

- name: Start iptables service
  command: "pct exec {{ ctid }} rc-service iptables start"

- name: Reload iptables service
  command: "pct exec {{ ctid }} rc-service iptables reload"
...
