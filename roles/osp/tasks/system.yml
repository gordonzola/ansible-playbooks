---
- name: Setup system
  include_role:
    name: app_ubuntu
    tasks_from: system

- name: Setup timezone
  command: "timedatectl set-timezone Europe/Paris"

- name: Set up web directory
  file:
    path: /srv/public
    owner: www-data
    group: www-data
    mode: 0755

- name: Change www-data home directory
  user:
    name: www-data
    home: /srv
    system: yes

- name: Install requirements
  apt:
    name: "{{ sub_item }}"
  loop:
    - git
    - redis
    - gunicorn3
    - uwsgi-plugin-python
    - python3-pip
    - logrotate
  loop_control:
    loop_var: sub_item

- name: Create nginx-osp dirs
  file:
    path: "/usr/local/nginx/{{ sub_item }}"
    state: directory
  loop:
    - sbin
    - conf
    - logs
  loop_control:
    loop_var: sub_item

- name: Install patched nginx (+rtmp)
  get_url:
    url: https://github.com/gordonzola/ansible-playbooks/raw/master/roles/osp/files/nginx
    dest: /usr/local/nginx/sbin/nginx
    mode: 0755
  # Couldnâ€™t use the copy module due to a UnicodeDecodeError, probably in the
  # lxc plugin
  # copy:
  #   src: files/nginx
  #   dest: /usr/local/nginx/sbin/nginx
  #   remote_src: no

- name: Fix redis config
  replace:
    path: /etc/redis/redis.conf
    regexp: "appendfsync everysec"
    replace: "appendfsync no"
  register: redis_config

- name: Reload redis
  service:
    name: redis
    state: restarted
  when: redis_config.changed

- name: Clone OSP repository
  git:
    repo: https://gitlab.com/Deamos/flask-nginx-rtmp-manager.git
    dest: /opt/osp
    force: yes

- name: Copy nginx config files
  copy:
    src: "/opt/osp/setup/nginx/{{ sub_item }}"
    dest: "/usr/local/nginx/conf/{{ sub_item }}"
    remote_src: yes
  loop:
    - nginx.conf
    - osp-redirects.conf
    - osp-rtmp.conf
    - osp-socketio.conf
    - mime.types
  loop_control:
    loop_var: sub_item

- name: Copy systemd files
  copy:
    src: "/opt/osp/setup/{{ sub_item.path }}{{ sub_item.name }}"
    dest: "/lib/systemd/system/{{ sub_item.name }}"
    remote_src: yes
  loop:
    - path: nginx/
      name: nginx-osp.service
    - path: gunicorn/
      name: osp-worker@.service
    - path: gunicorn/
      name: osp.target
  loop_control:
    loop_var: sub_item

- name: Install python dependencies
  pip:
    requirements: /opt/osp/setup/requirements.txt

- name: Change www-data home directory
  user:
    name: www-data
    home: /srv

- name: Setup OSP
  template:
    src: templates/config.py
    dest: /opt/osp/conf/config.py

- name: Create directories
  file:
    path: "{{ sub_item }}"
    state: directory
    owner: www-data
    group: www-data
  loop:
    - /var/www
    - /var/www/live
    - /var/www/videos
    - /var/www/live-rec
    - /var/www/images
    - /var/www/live-adapt
    - /var/stream-thumb
  loop_control:
    loop_var: sub_item

- name: Set owner for OSP
  file:
    name: "{{ sub_item }}"
    owner: www-data
    group: www-data
    recurse: yes
  loop:
    - /opt/osp
    - /opt/osp/.git
  loop_control:
    loop_var: sub_item

- name: Add FFMPEG4 repository
  apt_repository:
    repo: ppa:jonathonf/ffmpeg-4
    state: present

- name: Install FFMPEG
  apt:
    name: ffmpeg

- name: Copy logrotate conf
  copy:
    src: "/opt/osp/setup/logrotate/osp"
    dest: "/etc/logrotate.d/osp"
    remote_src: yes

- name: Setup ejabberd
  include: tasks/ejabberd.yml

- name: Initialize database
  command: "python3 /opt/osp/manage.py db init"
  ignore_errors: yes

- name: Set owner for OSP
  file:
    name: "/opt/osp/db/database.db"
    owner: www-data
    group: www-data

- name: Migrate database
  command: "python3 manage.py db migrate"
  args:
    chdir: /opt/osp

- name: Upgrade database
  command: "python3 manage.py db upgrade"
  args:
    chdir: /opt/osp

- name: Reload systemd
  systemd:
    daemon_reload: yes
    name: "{{ sub_item }}"
    state: started
    enabled: yes
  loop:
    - nginx-osp.service
    - osp.target
  loop_control:
    loop_var: sub_item
...
